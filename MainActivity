package com.swarna.android.pickgalleryimage;

import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;

public class MainActivity extends Activity {

    private static int RESULT_LOAD_TAG_IMG=1;
    String imgDecodableString;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button btn = (Button)findViewById(R.id.button);
        btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                loadImageFromGallery(v);
            }
        });

    }

    public void loadImageFromGallery(View view) {
        //create the intent and launch it
        Intent galleryIntent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
        //start the intent
        startActivityForResult(galleryIntent, RESULT_LOAD_TAG_IMG);

    }

    //Once after User picks image, we need to get the picked image data and set it in ImageView
    protected void onActivityResult(int requestCode, int resultCode, Intent data){
        super.onActivityResult(requestCode,resultCode,data);

        //when the image is picked

        try {
            if(requestCode==RESULT_LOAD_TAG_IMG && resultCode==RESULT_OK && null!=data){

                //get the image from data
                Uri selectedImage = data.getData();

                String[] filePathColumn = {MediaStore.Images.Media.DATA};

                //get the cursor
                Cursor cursor = getContentResolver().query(selectedImage, filePathColumn, null, null, null);

                //move to first row
                cursor.moveToFirst();

                int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
                imgDecodableString =cursor.getString(columnIndex);
                cursor.close();

                ImageView imgView = (ImageView)findViewById(R.id.imageView);

                imgView.setImageBitmap(BitmapFactory.decodeFile(imgDecodableString));

            }else{
                Toast.makeText(this, "No image is selected",Toast.LENGTH_LONG).show();
            }
        } catch (Exception e) {
            e.printStackTrace();
            Toast.makeText(this, "Something went wrong",Toast.LENGTH_LONG).show();
        }

    }


}
